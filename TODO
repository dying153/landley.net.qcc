TODO list:

- To fix: 'sizeof' generates code if too complex expression is given.
- add gcc extension typeof()
- add gcc extension __alignof__()
- fix constant error msg
- add 'CType' structure to optimize type handling (= compile even faster)
- suppress unneeded hash table for Symbols (= compile even faster)
- add alloca()
- ignore at least asm extension
- setjmp is not supported properly in bound checking.
- better local variables handling (needed for other targets)
- fix bound check code with '&' on local variables (currently done
  only for local arrays).
- To check: bound checking and float/long long/struct copy code. bound
  checking and symbol + offset optimization
- free all allocated data and use longjmp for errors (useful for libtcc use)

Not critical:

- C99: add variable size arrays
- C99: add complex types
- C99: fix multiple compound literals inits in blocks (ISOC99
  normative example - only relevant when using gotos! -> must add
  boolean variable to tell if compound literal was already
  initialized).
- add PowerPC or ARM code generator and improve codegen for RISC (need
  to suppress VT_LOCAL and use a base register instead).
- interactive mode / integrated debugger
- fix preprocessor symbol redefinition
- better constant opt (&&, ||, ?:)
- add portable byte code generator and interpreter for other
  unsupported architectures.
- C++: variable declaration in for, minimal 'class' support.
- win32: add __stdcall, __intxx. use resolve for bchecked malloc et
  al. check GetModuleHandle for dlls. check exception code (exception
  filter func).
- handle void (__attribute__() *ptr)()
- handle '? x, y : z' in reversed function arguments or unsized
  variable initialization (',' is considered incorrectly as separator
  in preparser).
